server:
  port: 9966
  servlet:
    context-path: /api
spring:
  application:
    name: rocket-pt
  profiles:
    active: n
  main:
    allow-circular-references: true
  data:
    web:
      pageable:
        one-indexed-parameters: true
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  mail:
    host: smtp.qq.com
    username: ss@qq.com
    password: yxwrnwnxvtssdagd
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls.enable: true
          starttls.required: true
  datasource:
    hikari:
      connection-timeout: 60000
      validation-timeout: 3000
      idle-timeout: 60000
      login-timeout: 5
      #最小允许值为30000ms（30秒）。 默认值：1800000（30分钟）
      max-lifetime: 60000
      #允许池达到的最大大小，包括空闲和使用中的连接。
      #此值将确定到数据库后端的最大实际连接数。合理的值最好由您的执行环境确定。 默认值：10
      maximum-pool-size: 500
      minimum-idle: 10
      read-only: false
  flyway:
    # 是否启用flyway
    enabled: true
    table: t_flyway_schema_history
    #若启动环境中的的数据库中有数据，但是没有flyway的历史表时，
    #false--启动会报错，true--继续生成flyway历史表完成脚本
    baseline-on-migrate: true
    # 执行时标记的tag 默认为<<Flyway Baseline>>
    #baseline-description: <<Flyway Baseline>>
    # 检测迁移脚本的路径是否存在，如不存在，则抛出异常
    fail-on-missing-locations: false
    # 脚本位置
    #locations: classpath:db/migration
    # 在迁移时，是否校验脚本，假设V1.0__初始.sql已经迁移过了，在下次启动时会校验该脚本是否有变更过，则抛出异常
    validate-on-migrate: false


#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mybatis/*.xml
  global-config:
    #数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      logic-delete-value: 1
      logic-not-delete-value: 0
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: true
    local-cache-scope: statement
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    log-impl: org.apache.ibatis.logging.nologging.NoLoggingImpl

pagehelper:
  banner: false
  helper-dialect: mysql
  reasonable: true
  params: count=countSql
  offset-as-page-num: true
  row-bounds-with-count: true
  support-methods-arguments: true

logging:
  file:
    path: logs
  level:
    # 设置所有日志的默认级别为INFO
    root: info
    org.springframework: info
    org.springframework.web: info
    com.zaxxer.hikari: warn
    com.rocketpt: info

  pattern:
    # 定义控制台输出的日志格式
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss}){faint} %clr(%-5p) %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    # 定义文件输出的日志格式，如果您使用文件输出
    file: "%d{yyyy-MM-dd HH:mm:ss} %-5p --- [%15.15t] %-40.40logger{39} : %m%n"


# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.rocketpt.server
  default-flat-param-object: true

# knife4j的增强配置，不需要增强可以不配
knife4j:
  enable: true
  setting:
    language: zh_cn
    #    enable-swagger-models: true
    #    enable-document-manage: true
    swagger-model-name: 实体类列表

  documents:
    - name: 接口基础
      locations: classpath:doc/base/*
      group: default



############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天 2592000, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: true
  # token风格
  token-style: simple-uuid
  # 是否输出操作日志
  is-log: false
  banner: false
  # jwt秘钥
#  jwt-secret-key: xxxxxxxxxxxxxxxx
